!(function (e, t) {
	"object" == typeof exports && "undefined" != typeof module ? t(exports, require("jquery")) : "function" == typeof define && define.amd ? define(["exports", "jquery"], t) : t(((e = e || self).bootstrap = {}), e.jQuery);
})(this, function (e, t) {
	"use strict";
	function n(e) {
		for (var t = 1; t < arguments.length; t++) {
			var n = null != arguments[t] ? arguments[t] : {},
				r = Object.keys(n);
			"function" == typeof Object.getOwnPropertySymbols &&
			(r = r.concat(
				Object.getOwnPropertySymbols(n).filter(function (e) {
					return Object.getOwnPropertyDescriptor(n, e).enumerable;
				})
			)),
				r.forEach(function (t) {
					var r, i, a;
					(r = e), (a = n[(i = t)]), i in r ? Object.defineProperty(r, i, { value: a, enumerable: !0, configurable: !0, writable: !0 }) : (r[i] = a);
				});
		}
		return e;
	}
	t = t && t.hasOwnProperty("default") ? t.default : t;
	var r = "transitionend";
	var i = {
		TRANSITION_END: "bsTransitionEnd",
		getSelectorFromElement: function (e) {
			var t = e.getAttribute("data-target");
			if (!t || "#" === t) {
				var n = e.getAttribute("href");
				t = n && "#" !== n ? n.trim() : "";
			}
			try {
				return document.querySelector(t) ? t : null;
			} catch (e) {
				return null;
			}
		},
		getTransitionDurationFromElement: function (e) {
			if (!e) return 0;
			var n = t(e).css("transition-duration"),
				r = t(e).css("transition-delay"),
				i = parseFloat(n),
				a = parseFloat(r);
			return i || a ? ((n = n.split(",")[0]), (r = r.split(",")[0]), 1e3 * (parseFloat(n) + parseFloat(r))) : 0;
		},
		reflow: function (e) {
			return e.offsetHeight;
		},
		triggerTransitionEnd: function (e) {
			t(e).trigger(r);
		},
		isElement: function (e) {
			return (e[0] || e).nodeType;
		},
		typeCheckConfig: function (e, t, n) {
			for (var r in n)
				if (Object.prototype.hasOwnProperty.call(n, r)) {
					var a = n[r],
						s = t[r],
						o =
							s && i.isElement(s)
								? "element"
								: ((l = s),
									{}.toString
										.call(l)
										.match(/\s([a-z]+)/i)[1]
										.toLowerCase());
					if (!new RegExp(a).test(o)) throw new Error(e.toUpperCase() + ': Option "' + r + '" provided type "' + o + '" but expected type "' + a + '".');
				}
			var l;
		},
	};
	(t.fn.emulateTransitionEnd = function (e) {
		var n = this,
			r = !1;
		return (
			t(this).one(i.TRANSITION_END, function () {
				r = !0;
			}),
				setTimeout(function () {
					r || i.triggerTransitionEnd(n);
				}, e),
				this
		);
	}),
		(t.event.special[i.TRANSITION_END] = {
			bindType: r,
			delegateType: r,
			handle: function (e) {
				if (t(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
			},
		});
	var a = "collapse",
		s = "bs.collapse",
		o = "." + s,
		l = (t.fn[a], { toggle: !0, parent: "" }),
		c = { toggle: "boolean", parent: "(string|element)" },
		h = { SHOW: "show" + o, SHOWN: "shown" + o, HIDE: "hide" + o, HIDDEN: "hidden" + o, CLICK_DATA_API: "click" + o + ".data-api" },
		g = "show",
		d = "collapse",
		u = "collapsing",
		f = "collapsed",
		m = '[data-toggle="collapse"]',
		_ = (function () {
			function e(e, t) {
				(this._isTransitioning = !1),
					(this._element = e),
					(this._config = this._getConfig(t)),
					(this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + e.id + '"],[data-toggle="collapse"][data-target="#' + e.id + '"]')));
				for (var n = [].slice.call(document.querySelectorAll(m)), r = 0, a = n.length; r < a; r++) {
					var s = n[r],
						o = i.getSelectorFromElement(s),
						l = [].slice.call(document.querySelectorAll(o)).filter(function (t) {
							return t === e;
						});
					null !== o && 0 < l.length && ((this._selector = o), this._triggerArray.push(s));
				}
				(this._parent = this._config.parent ? this._getParent() : null), this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
			}
			var r = e.prototype;
			return (
				(r.toggle = function () {
					t(this._element).hasClass(g) ? this.hide() : this.show();
				}),
					(r.show = function () {
						var n,
							r,
							a = this;
						if (
							!(
								this._isTransitioning ||
								t(this._element).hasClass(g) ||
								(this._parent &&
								0 ===
								(n = [].slice.call(this._parent.querySelectorAll(".show, .collapsing")).filter(function (e) {
									return "string" == typeof a._config.parent ? e.getAttribute("data-parent") === a._config.parent : e.classList.contains(d);
								})).length &&
								(n = null),
								n && (r = t(n).not(this._selector).data(s)) && r._isTransitioning)
							)
						) {
							var o = t.Event(h.SHOW);
							if ((t(this._element).trigger(o), !o.isDefaultPrevented())) {
								n && (e._jQueryInterface.call(t(n).not(this._selector), "hide"), r || t(n).data(s, null));
								var l = this._getDimension();
								t(this._element).removeClass(d).addClass(u), (this._element.style[l] = 0), this._triggerArray.length && t(this._triggerArray).removeClass(f).attr("aria-expanded", !0), this.setTransitioning(!0);
								var c = "scroll" + (l[0].toUpperCase() + l.slice(1)),
									m = i.getTransitionDurationFromElement(this._element);
								t(this._element)
									.one(i.TRANSITION_END, function () {
										t(a._element).removeClass(u).addClass(d).addClass(g), (a._element.style[l] = ""), a.setTransitioning(!1), t(a._element).trigger(h.SHOWN);
									})
									.emulateTransitionEnd(m),
									(this._element.style[l] = this._element[c] + "px");
							}
						}
					}),
					(r.hide = function () {
						var e = this;
						if (!this._isTransitioning && t(this._element).hasClass(g)) {
							var n = t.Event(h.HIDE);
							if ((t(this._element).trigger(n), !n.isDefaultPrevented())) {
								var r = this._getDimension();
								(this._element.style[r] = this._element.getBoundingClientRect()[r] + "px"), i.reflow(this._element), t(this._element).addClass(u).removeClass(d).removeClass(g);
								var a = this._triggerArray.length;
								if (0 < a)
									for (var s = 0; s < a; s++) {
										var o = this._triggerArray[s],
											l = i.getSelectorFromElement(o);
										null !== l && (t([].slice.call(document.querySelectorAll(l))).hasClass(g) || t(o).addClass(f).attr("aria-expanded", !1));
									}
								this.setTransitioning(!0), (this._element.style[r] = "");
								var c = i.getTransitionDurationFromElement(this._element);
								t(this._element)
									.one(i.TRANSITION_END, function () {
										e.setTransitioning(!1), t(e._element).removeClass(u).addClass(d).trigger(h.HIDDEN);
									})
									.emulateTransitionEnd(c);
							}
						}
					}),
					(r.setTransitioning = function (e) {
						this._isTransitioning = e;
					}),
					(r._getConfig = function (e) {
						return ((e = n({}, l, e)).toggle = Boolean(e.toggle)), i.typeCheckConfig(a, e, c), e;
					}),
					(r._getDimension = function () {
						return t(this._element).hasClass("width") ? "width" : "height";
					}),
					(r._addAriaAndCollapsedClass = function (e, n) {
						var r = t(e).hasClass(g);
						n.length && t(n).toggleClass(f, !r).attr("aria-expanded", r);
					}),
					(e._jQueryInterface = function (r) {
						return this.each(function () {
							var i = t(this),
								a = i.data(s),
								o = n({}, l, i.data(), "object" == typeof r && r ? r : {});
							if ((!a && o.toggle && /show|hide/.test(r) && (o.toggle = !1), a || ((a = new e(this, o)), i.data(s, a)), "string" == typeof r)) {
								if (void 0 === a[r]) throw new TypeError('No method named "' + r + '"');
								a[r]();
							}
						});
					}),
					e
			);
		})();
	t(document).on(h.CLICK_DATA_API, m, function (e) {
		"A" === e.currentTarget.tagName && e.preventDefault();
		var n = t(this),
			r = i.getSelectorFromElement(this),
			a = [].slice.call(document.querySelectorAll(r));
		t(a).each(function () {
			var e = t(this),
				r = e.data(s) ? "toggle" : n.data();
			_._jQueryInterface.call(e, r);
		});
	}),
		(t.fn[a] = _._jQueryInterface),
		(t.fn[a].Constructor = _);
});
